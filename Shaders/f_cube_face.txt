#version 330

in vec2 f_uv;
in vec3 f_normal;
in vec3 f_world_space_pos;

out vec4 o_color;

uniform sampler2D my_texture;
uniform float u_time;
uniform vec3 light_position_fireball;

void main()
{
    // Sample the texture color
    vec4 tex_color = texture(my_texture, f_uv);

    // Calculate the light direction as a normalized vector from the light source to the fragment position
    vec3 light_direction = normalize(vec3(cos(u_time * 2), 0.5, sin(u_time * 2)));
    
    // Calculate the light intensity using the dot product between the normal and the light direction
    float light_intensity = max(dot(f_normal, light_direction), 0.0);
    
    // Apply lighting to the texture color
    o_color = tex_color;
    o_color.xyz *= light_intensity;
    o_color.xyz += tex_color.xyz * 0.25;
}