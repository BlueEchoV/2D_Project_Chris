#version 330

in vec2 f_uv;
in vec3 f_normal;
in vec3 f_world_space_pos;

out vec4 o_color;

uniform sampler2D my_texture;
uniform float u_time;
uniform vec3 light_position_fireball;

void main()
{
	// No Lighting
	// o_color = texture(my_texture, f_uv);
	
	// Lighting
	vec4 tex_color = texture(my_texture, f_uv);
	
	vec3 light_pos = vec3(0, 0, 0);
	// vec3 light_pos = light_position_fireball;
	
	light_pos.x += cos(u_time * 10) * 10;
	light_pos.z += sin(u_time * 10) * 10;
	
	vec3 pixel_to_light_length = light_pos - f_world_space_pos;
	float vec_length = length(pixel_to_light_length);
	float light_radius = 100000;
	
	// Saturate clamps between 0 and 1
	float distance_intensity = 1.0 - clamp(vec_length / light_radius, 0, 10);
	vec3 pixel_to_light = normalize(pixel_to_light_length);
	float light_intensity = max(dot(f_normal, pixel_to_light), 0);
	o_color = tex_color;
	o_color.xyz *= clamp((light_intensity * distance_intensity) + 0.1, 0, 1);
}