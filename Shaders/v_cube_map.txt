#version 330

layout(location = 0) in vec3 v_position;
layout(location = 1) in vec4 v_color;
layout(location = 2) in vec2 v_uv;
layout(location = 3) in vec3 v_normal;

uniform mat4 perspective_from_view;

out vec3 f_uv;

void main() {
	vec4 new_pos = perspective_from_view * vec4(v_position, 1);
	gl_Position = new_pos;
	// Don't think of this as a position, think of it as a direction
	// Swizzle
	f_uv = normalize(v_position).xzy; 
	// Flip
	f_uv.z *= -1;
	// Swizzle
	f_uv.xz = f_uv.zx; 
	// Flip
	f_uv.x *= -1;
}